{"{\"assumptions\":{},\"sourceRoot\":\"/Users/maynard/workspace/node/tasksModule/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/maynard/workspace/node/tasksModule\",\"filename\":\"/Users/maynard/workspace/node/tasksModule/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/maynard/workspace/node/tasksModule\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.0:development":{"value":{"code":"import express from \"express\";\nimport cors from \"cors\";\nimport morgan from \"morgan\";\nimport cluster from \"cluster\";\nconst numCPUS = 2;\nconst app = express();\nconst PORT = process.env.PORT || 3030;\napp.use(cors());\napp.use(express.json());\napp.use(morgan(\"combined\"));\n//app.use(\"/api\", require(\"./src/config/routes\"));\n\nif (cluster.isMaster) {\n  for (let i = 0; i < numCPUS; i++) {\n    cluster.fork();\n  }\n  cluster.on(\"exit\", (worker, code, signal) => {\n    cluster.fork();\n  });\n} else {\n  app.listen(PORT, () => console.log(`Server id ${process.pid} Listening to port ${PORT}`));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwiY29ycyIsIm1vcmdhbiIsImNsdXN0ZXIiLCJudW1DUFVTIiwiYXBwIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJ1c2UiLCJqc29uIiwiaXNNYXN0ZXIiLCJpIiwiZm9yayIsIm9uIiwid29ya2VyIiwiY29kZSIsInNpZ25hbCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJwaWQiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9tYXluYXJkL3dvcmtzcGFjZS9ub2RlL3Rhc2tzTW9kdWxlL3NyYy8iLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCI7XG5pbXBvcnQgY2x1c3RlciBmcm9tIFwiY2x1c3RlclwiO1xuXG5jb25zdCBudW1DUFVTID0gMjtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAzMDtcblxuYXBwLnVzZShjb3JzKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKG1vcmdhbihcImNvbWJpbmVkXCIpKTtcbi8vYXBwLnVzZShcIi9hcGlcIiwgcmVxdWlyZShcIi4vc3JjL2NvbmZpZy9yb3V0ZXNcIikpO1xuXG5pZiAoY2x1c3Rlci5pc01hc3Rlcikge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG51bUNQVVM7IGkrKykge1xuICAgIGNsdXN0ZXIuZm9yaygpO1xuICB9XG5cbiAgY2x1c3Rlci5vbihcImV4aXRcIiwgKHdvcmtlciwgY29kZSwgc2lnbmFsKSA9PiB7XG4gICAgY2x1c3Rlci5mb3JrKCk7XG4gIH0pO1xufSBlbHNlIHtcbiAgYXBwLmxpc3RlbihQT1JULCAoKSA9PlxuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaWQgJHtwcm9jZXNzLnBpZH0gTGlzdGVuaW5nIHRvIHBvcnQgJHtQT1JUfWApLFxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFPLE1BQU0sU0FBUztBQUM3QixPQUFPQyxJQUFJLE1BQU0sTUFBTTtBQUN2QixPQUFPQyxNQUFNLE1BQU0sUUFBUTtBQUMzQixPQUFPQyxPQUFPLE1BQU0sU0FBUztBQUU3QixNQUFNQyxPQUFPLEdBQUcsQ0FBQztBQUVqQixNQUFNQyxHQUFHLEdBQUdMLE9BQU8sQ0FBQyxDQUFDO0FBQ3JCLE1BQU1NLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNGLElBQUksSUFBSSxJQUFJO0FBRXJDRCxHQUFHLENBQUNJLEdBQUcsQ0FBQ1IsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNmSSxHQUFHLENBQUNJLEdBQUcsQ0FBQ1QsT0FBTyxDQUFDVSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCTCxHQUFHLENBQUNJLEdBQUcsQ0FBQ1AsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzNCOztBQUVBLElBQUlDLE9BQU8sQ0FBQ1EsUUFBUSxFQUFFO0VBQ3BCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHUixPQUFPLEVBQUVRLENBQUMsRUFBRSxFQUFFO0lBQ2hDVCxPQUFPLENBQUNVLElBQUksQ0FBQyxDQUFDO0VBQ2hCO0VBRUFWLE9BQU8sQ0FBQ1csRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxLQUFLO0lBQzNDZCxPQUFPLENBQUNVLElBQUksQ0FBQyxDQUFDO0VBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUMsTUFBTTtFQUNMUixHQUFHLENBQUNhLE1BQU0sQ0FBQ1osSUFBSSxFQUFFLE1BQ2ZhLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWFiLE9BQU8sQ0FBQ2MsR0FBRyxzQkFBc0JmLElBQUksRUFBRSxDQUNsRSxDQUFDO0FBQ0giLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["express","cors","morgan","cluster","numCPUS","app","PORT","process","env","use","json","isMaster","i","fork","on","worker","code","signal","listen","console","log","pid"],"sourceRoot":"/Users/maynard/workspace/node/tasksModule/src/","sources":["index.js"],"sourcesContent":["import express from \"express\";\nimport cors from \"cors\";\nimport morgan from \"morgan\";\nimport cluster from \"cluster\";\n\nconst numCPUS = 2;\n\nconst app = express();\nconst PORT = process.env.PORT || 3030;\n\napp.use(cors());\napp.use(express.json());\napp.use(morgan(\"combined\"));\n//app.use(\"/api\", require(\"./src/config/routes\"));\n\nif (cluster.isMaster) {\n  for (let i = 0; i < numCPUS; i++) {\n    cluster.fork();\n  }\n\n  cluster.on(\"exit\", (worker, code, signal) => {\n    cluster.fork();\n  });\n} else {\n  app.listen(PORT, () =>\n    console.log(`Server id ${process.pid} Listening to port ${PORT}`),\n  );\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,OAAO,MAAM,SAAS;AAE7B,MAAMC,OAAO,GAAG,CAAC;AAEjB,MAAMC,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,MAAMM,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCD,GAAG,CAACI,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;AACfI,GAAG,CAACI,GAAG,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;AACvBL,GAAG,CAACI,GAAG,CAACP,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3B;;AAEA,IAAIC,OAAO,CAACQ,QAAQ,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,OAAO,EAAEQ,CAAC,EAAE,EAAE;IAChCT,OAAO,CAACU,IAAI,CAAC,CAAC;EAChB;EAEAV,OAAO,CAACW,EAAE,CAAC,MAAM,EAAE,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,KAAK;IAC3Cd,OAAO,CAACU,IAAI,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ,CAAC,MAAM;EACLR,GAAG,CAACa,MAAM,CAACZ,IAAI,EAAE,MACfa,OAAO,CAACC,GAAG,CAAC,aAAab,OAAO,CAACc,GAAG,sBAAsBf,IAAI,EAAE,CAClE,CAAC;AACH","ignoreList":[]}},"mtime":1734160121360}}